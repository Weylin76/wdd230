@media screen and (min-width: 600px){
    nav {
        flex-direction: row;
        justify-content: space-evenly;
        padding: 0.5rem 0;
    }

    nav a {
        padding: 0.5rem; /* Adjust this value as needed to reduce the space */
        margin: 0; /* Ensure there's no extra margin taking up space */
        border: 1px solid var(--grinch-red);
        border-radius: 5%; /* This is a percentage, so it's responsive to the size of the <a> tag */
        animation: rotate 1s infinite alternate;
        background-color: white;
        /* If you're still seeing too much space, you might need to reset any flex-grow or width properties */
        flex-grow: 0; /*Prevents the <a> tags from growing to fill the space */
        width: auto; /*Lets the <a> tags shrink to fit their content plus padding */
    }

    header h1{
        font-size: 4rem;
    }

    @keyframes rotate {
        0%, 100% {
            transform: rotate(0deg);
        }
        50% {
            transform: rotate(5deg);
        }
    }
    
    @keyframes rotateReverse {
        0%, 100% {
            transform: rotate(0deg);
        }
        50% {
            transform: rotate(-5deg);
        }
    }
    
    #nav a:nth-child(even) { /* For even-numbered links, if you want alternate rotation */
        animation: rotateReverse 1s infinite alternate;
    }

    .content-container {
        display: grid;
        grid-template-columns: repeat(3, 1fr); /* This sets up three columns of equal width */
        grid-template-rows: auto auto  auto auto; /* auto allows the row height to fit the content */
        gap: 10px; /* This adds some space between the grid items */
    }

    picture{
        grid-area: 1 / 1 / 2 / 4;
    }

    #current-event{
        grid-area: 2/1/3/3;
    }

    #member-heading{
        grid-area: 3/1/4/4;
    }
    #spotlights{
        grid-area: 4/1/5/4;
    }

    #spotlights {
        display: flex;        /* Establishes a flex container */
        justify-content: space-around; /* This will space out the child divs evenly */
        align-items: flex-start; /* This aligns the items to the start of the flex container */
        border: none;
    }
    
    #spotlights > article {
        flex: 0 1 auto; /* This means don't grow, can shrink, and based on the width of the content */
        margin: 0 10px; /* This adds some space between the divs, adjust as needed */
        border: 1px solid black;
    }

    .footer-container{
        display: grid;
        grid-template-columns: 1fr 2fr; /* Allocate twice as much space to the second column */
    }

    #my-info{
        grid-column: 1/3;
    }

    #my-info {
        display: flex;
        justify-content: space-evenly; /* This distributes space evenly between and around the flex items */
        align-items: center; /* This vertically centers the items in the container (if needed) */
    }

    #map-container {
        position: relative;
        width: 30%; /* Reduce width to fit the space, adjust as needed */
        padding-bottom: 30%; /* Adjust padding-bottom to maintain aspect ratio */
        margin: 1rem auto; /* Keeps it centered, adjust as needed */
        border: 1px solid black; /* Optional, for visibility */
    }
    
    .map-iframe {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%; /* Make sure this is 100% to fill the container */
        height: 100%; /* Make sure this is 100% to fill the container */
        border: 0; /* No border */
    }

    #crumpit-info {
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        text-align: center;
        font-size: 1.5rem;
    }

    #crumpit-info p{
        padding: 1rem .5rem;
        font-size: 2.5rem;
    }

    footer hr {
        grid-column: 1 / 3; 
        width: 98%; 
        border: none;
        height: 1px;
        background-color: white;
        margin: .5rem; 
    }
    
    
    
}